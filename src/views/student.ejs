<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Management System</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }

        :root {
            --primary-color: #3b82f6;
            --secondary-color: #10b981;
            --background-color: #f4f6f9;
            --text-color: #1f2937;
            --card-background: #ffffff;
            --hover-color: #2563eb;
            --transition-speed: 0.3s;
        }

        body {
            background: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .container {
            max-width: 1400px;
            width: 95%;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .header {
            background: var(--card-background);
            padding: 2rem;
            border-radius: 16px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
            margin-bottom: 2.5rem;
            transition: all var(--transition-speed) ease;
        }

        .header:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            color: var(--primary-color);
            font-size: 2.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .header h1 i {
            color: var(--secondary-color);
        }

        .add-student-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.75rem;
            color: var(--text-color);
            font-weight: 600;
            transition: color var(--transition-speed);
        }

        .form-group input {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 1rem;
            transition: all var(--transition-speed);
            background-color: #f9fafb;
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .btn {
            background: var(--primary-color);
            color: white;
            padding: 1rem 1.5rem;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all var(--transition-speed);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn:hover {
            background: var(--hover-color);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(59, 130, 246, 0.3);
        }

        .btn-delete {
            background: #ff0000;
            transition: all var(--transition-speed);
        }

        .btn-delete:hover {
            background: #ff4000;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(203, 3, 3, 0.3);
        }

        .btn-edit {
            background: var(--secondary-color);
            transition: all var(--transition-speed);
        }

        .btn-edit:hover {
            background: #01ff0a;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(35, 170, 4, 0.3);
        }

        .students-table {
            background: var(--card-background);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
            transition: all var(--transition-speed);
        }

        .students-table:hover {
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }

        .students-table table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        .students-table th,
        .students-table td {
            padding: 1.25rem;
            text-align: left;
            border-bottom: 1px solid #f3f4f6;
        }

        .students-table th {
            background-color: #f9fafb;
            color: var(--text-color);
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .students-table tr:nth-child(even) {
            background-color: #f9fafb;
        }

        .students-table tr:hover {
            background-color: #f3f4f6;
            transition: background-color var(--transition-speed);
        }

        .action-buttons {
            display: flex;
            gap: 0.75rem;
        }

        .error-message {
            color: #ef4444;
            font-weight: 600;
            position: absolute;
            bottom: -1.25rem;
            left: 0;
            font-size: 0.875rem;
        }

        @media (max-width: 768px) {
            .container {
                width: 98%;
                margin: 1rem auto;
            }

            .header h1 {
                font-size: 2rem;
            }

            .students-table {
                overflow-x: auto;
            }

            .add-student-form {
                grid-template-columns: 1fr;
            }

            .btn {
                width: 100%;
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .students-table tbody tr {
            animation: fadeIn 0.5s ease forwards;
            opacity: 0;
        }

        .students-table tbody tr:nth-child(even) {
            animation-delay: 0.1s;
        }

        .students-table tbody tr:nth-child(odd) {
            animation-delay: 0.2s;
        }
    </style>

</head>

<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-user-graduate"></i> Student Management System</h1>
            <form id="studentForm" class="add-student-form">
                <div class="form-group">
                    <label for="name">Full Name</label>
                    <input type="text" id="name" placeholder="Enter student name">
                    <span class="error-message" id="nameError"></span>
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" placeholder="Enter email address">
                    <span class="error-message" id="emailError"></span>
                </div>
                <div class="form-group">
                    <label for="age">Age</label>
                    <input type="number" id="age" placeholder="Enter age">
                    <span class="error-message" id="ageError"></span>
                </div>
                <div class="form-group">
                    <label for="department">Department</label>
                    <input type="text" id="department" placeholder="Enter Department">
                    <span class="error-message" id="departmentError"></span>
                </div>
                <div class="form-group">
                    <label style="visibility: hidden;">Add Student</label>
                    <button type="submit" class="btn">Add Student</button>
                </div>
            </form>
        </div>

        <div class="students-table">
            <%if(allStudents.length===0){%>
                <h1 style="text-align: center;">Sorry No Students is there <span style="color: red;">!</span></h1>
            <%}else{%>
                <table width="100%">
                    <thead>
                        <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Age</th>
                        <th>Department</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="studentList">
                    <%allStudents.forEach(student=>{%>
                        <tr>
                            <td>
                                <%=student.name%>
                            </td>
                            <td>
                                <%=student.email%>
                            </td>
                            <td>
                                <%=student.age%>
                            </td>
                            <td>
                                <%=student.department%>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="/editStudentPage/<%=student._id%>"> <button class="btn btn-edit"><i class="fas fa-edit"></i></button></a>
                                    <button class="btn btn-delete" type="button" data-student-id="<%= student._id %>"><i class="fas fa-trash"></i></button>
                                 </div>
                            </td>
                         </tr>
                    <%})%>
                 </tbody>
               <%}%>
            </table>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById('studentForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const name = document.getElementById('name').value.trim();
            const email = document.getElementById('email').value.trim();
            const age = document.getElementById('age').value.trim();
            const department = document.getElementById('department').value.trim();

            let valid = true;

            document.getElementById('nameError').textContent = '';
            document.getElementById('emailError').textContent = '';
            document.getElementById('ageError').textContent = '';
            document.getElementById('departmentError').textContent = '';

            if (!name) {
                document.getElementById('nameError').textContent = 'Name is required';
                valid = false;
            }
            if (!email) {
                document.getElementById('emailError').textContent = 'Email is required';
                valid = false;
            }
            if (!age) {
                document.getElementById('ageError').textContent = 'Age is required';
                valid = false;
            }
            if (!department) {
                document.getElementById('departmentError').textContent = 'Department is required';
                valid = false;
            }

            if (!valid) return;

            try {
                const response = await fetch('/addStudent', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name, email, age, department })
                });

                const data = await response.json();
                if (response.ok) {
                    Swal.fire({
                        title: "Student added successfully!",
                        // text: "Student added successfully!",
                        icon: "success"
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    if (data.message.includes("Email already exists")) {
                        document.getElementById('emailError').textContent = 'Email already exists';
                    } else {
                        Swal.fire("Error", "Failed to send the data", "error");
                    }
                }
            } catch (error) {
                console.log(error);
                Swal.fire("Error", "An error occurred while adding the student.", "error");
            }
        });


        ['name', 'email', 'age', 'department'].forEach(field => {
            document.getElementById(field).addEventListener('input', () => {
                document.getElementById(`${field}Error`).textContent = '';
            });
        });


        document.querySelectorAll('.btn-delete').forEach(button => {
            button.addEventListener('click', async (e) => {
                e.stopPropagation();

                const studentId = button.getAttribute('data-student-id');

                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/deleteStudent/${studentId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            const data = await response.json();
                            if (response.ok) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: "Your file has been deleted.",
                                    icon: "success"
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire("Failed", "Failed to delete the student.", "error");
                            }
                        } catch (error) {
                            console.log(error);
                            Swal.fire("Error", "An error occurred while deleting the student.", "error");
                        }
                    }
                });
            });
        });

    </script>
</body>

</html>